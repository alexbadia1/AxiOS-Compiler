import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class AxiOSTestsService {

  // Run this 1
  public GLADOS_IP1_TEST = `A9 00 8D 00 00 A9 00 8D 4B 00 A9 00 8D 4B 00 A2 03 EC 4B 00 D0 07 A2 01 EC 00 00 D0 05 A2 00 EC 00 00 D0 26 A0 4C A2 02 FF AC 4B 00 A2 01 FF A9 01 6D 4B 00 8D 4B 00 A2 02 EC 4B 00 D0 05 A0 55 A2 02 FF A2 01 EC 00 00 D0 C5 00 00 63 6F 75 6E 74 69 6E 67 00 68 65 6C 6C 6F 20 77 6F 72 6C 64 00`;

  // Run these 2 in succession
  public GLADOS_IP2_TEST1 = `A9 00 8D 00 00 EA A9 00 8D 4C 00 A9 00 8D 4C 00 A2 03 EC 4C 00 D0 07 A2 01 EC 00 00 D0 05 A2 00 EC 00 00 D0 26 A0 4D A2 02 FF AC 4C 00 A2 01 FF A9 01 6D 4C 00 8D 4C 00 A2 02 EC 4C 00 D0 05 A0 56 A2 02 FF A2 01 EC 00 00 D0 C5 00 00 63 6F 75 6E 74 69 6E 67 00 68 65 6C 6C 6F 20 77 6F 72 6C 64 00`;
  public GLADOS_IP2_TEST2 = `A9 03 8D 41 00 A9 01 8D 40 00 AC 40 00 A2 01 FF EE 40 00 AE 40 00 EC 41 00 D0 EF A9 44 8D 42 00 A9 4F 8D 43 00 A9 4E 8D 44 00 A9 45 8D 45 00 A9 00 8D 46 00 A2 02 A0 42 FF 00`;

  // Run these 3 in succession
  public GLADOS_IP3_TEST1 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 03 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 61 00 61 64 6F 6E 65 00";
  public GLADOS_IP3_TEST2 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 06 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 62 00 62 64 6F 6E 65 00";
  public GLADOS_IP3_TEST3 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 09 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 63 00 63 64 6F 6E 65 00";

  // Run all 4 at once to test disk swapping
  public GLADOS_IP4_TEST1 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 03 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 61 00 61 64 6F 6E 65 00";
  public GLADOS_IP4_TEST2 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 06 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 62 00 62 64 6F 6E 65 00";
  public GLADOS_IP4_TEST3 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 09 AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 63 00 63 64 6F 6E 65 00";
  public GLADOS_IP4_TEST4 = "A9 00 8D 7B 00 A9 00 8D 7B 00 A9 00 8D 7C 00 A9 00 8D 7C 00 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 39 A0 7D A2 02 FF AC 7B 00 A2 01 FF AD 7B 00 8D 7A 00 A9 01 6D 7A 00 8D 7B 00 A9 0C AE 7B 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 01 EC 7A 00 D0 05 A9 01 8D 7C 00 A9 00 AE 7C 00 8D 7A 00 A9 00 EC 7A 00 D0 02 A9 01 8D 7A 00 A2 00 EC 7A 00 D0 AC A0 7F A2 02 FF 00 00 00 00 64 00 64 64 6F 6E 65 00";

  // This shouldn't run
  public INVALID_OP_CODES = `A9 A9 DD 01 00`;

  public MEMORY_BOUND_TEST = `A9 A9 A2 01 EC 13 00 AC 0B 00 8D F0 00 EE 0B 00 D0 F5 00 00`;

  public LOTS_OF_LOOPS = `
  A9 00 8D EC 00 A9 00 8D EC 00 A9 00 8D ED 00 A9
  00 8D ED 00 A9 00 8D EE 00 A9 00 8D EF 00 AD ED
  00 8D FF 00 AE FF 00 A9 00 8D FF 00 EC FF 00 D0
  BA AD EC 00 8D FF 00 A9 01 6D FF 00 8D EC 00 AD
  EC 00 8D FF 00 AE FF 00 A9 03 8D FF 00 EC FF 00
  D0 05 A9 01 8D ED 00 A9 00 8D EE 00 A9 00 8D EF
  00 AD EF 00 8D FF 00 AE FF 00 A9 00 8D FF 00 EC
  FF 00 D0 49 AD EE 00 8D FF 00 A9 01 6D FF 00 8D
  EE 00 AD EE 00 8D FF 00 AE FF 00 A9 02 8D FF 00
  EC FF 00 D0 05 A9 01 8D EF 00 A9 F8 8D FF 00 A2
  02 AC FF 00 FF AD EE 00 A2 01 8D FF 00 AC FF 00
  FF A9 00 8D FF 00 A2 01 EC FF 00 D0 A4 A9 F1 8D
  FF 00 A2 02 AC FF 00 FF AD EC 00 A2 01 8D FF 00
  AC FF 00 FF A9 EE 8D FF 00 A2 02 AC FF 00 FF A9
  00 8D FF 00 A2 01 EC FF 00 D0 33 00 00 00 20 20
  00 20 6F 75 74 65 72 00 20 69 6E 6E 65 72 00 00
 `;

  public glados1: Array<Map<string, string>> = [
    new Map<string, string>([["GLADOS_IP1_TEST", this.GLADOS_IP1_TEST]]),
  ];

  public glados2: Array<Map<string, string>> = [
    new Map<string, string>([["GLADOS_IP2_TEST1", this.GLADOS_IP2_TEST1]]),
    new Map<string, string>([["GLADOS_IP2_TEST2", this.GLADOS_IP2_TEST2]]),
  ];

  public glados3: Array<Map<string, string>> = [
    new Map<string, string>([["GLADOS_IP3_TEST1", this.GLADOS_IP3_TEST1]]),
    new Map<string, string>([["GLADOS_IP3_TEST2", this.GLADOS_IP3_TEST2]]),
    new Map<string, string>([["GLADOS_IP3_TEST3", this.GLADOS_IP3_TEST3]]),
  ];

  public glados4: Array<Map<string, string>> = [
    new Map<string, string>([["GLADOS_IP4_TEST1", this.GLADOS_IP4_TEST1]]),
    new Map<string, string>([["GLADOS_IP4_TEST2", this.GLADOS_IP4_TEST2]]),
    new Map<string, string>([["GLADOS_IP4_TEST3", this.GLADOS_IP4_TEST3]]),
    new Map<string, string>([["GLADOS_IP4_TEST4", this.GLADOS_IP4_TEST4]]),

  ];

  public stressTests: Array<Map<string, string>> = [
    new Map<string, string>([["INVALID_OP_CODES", this.INVALID_OP_CODES]]),
    new Map<string, string>([["MEMORY_BOUND_TEST", this.MEMORY_BOUND_TEST]]),
    new Map<string, string>([["LOTS_OF_LOOPS", this.LOTS_OF_LOOPS]]),
  ];
  constructor() { } // constructor
} // TestService
